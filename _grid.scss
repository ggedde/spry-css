/*! 
* Spry Grid
*/
:root {
	--gap: #{map-get($gaps, 'default')};
	@each $breakpoint, $breakpoint_width in $breakpoints {
		@media screen and (min-width: $breakpoint_width) {
			--gap: #{map-get($gaps, $breakpoint)};
		}
	}
}

.grid {
	display: grid;
	gap: var(--gap);
}

.row {
	display: flex;
	flex-wrap: wrap;
	gap: var(--gap);
	> * {
		flex: 0 100%;
	}
	&.columns-fixed > *,
	> .col-fixed {
		flex: 1;
	}
	&.columns-auto > *,
	> .col-auto {
		flex: auto;
		min-width: auto;
		max-width: none;
	}
}

@for $i from 1 through 12 {
	.grid.columns-#{$i} {
		grid-template-columns: repeat($i, minmax(0, 1fr));
	}
	.grid-#{$i}00 {
		display: grid;
		grid-template-columns: repeat( auto-fit, minmax(#{$i}00px, 1fr));
		gap: var(--gap);
	}
	.row.columns-#{$i}>* {
		flex: calc(#{calc(round(percentage(calc(1 / $i)) * 1000) / 1000)} - var(--gap));
		min-width: calc(#{calc(round(percentage(calc(1 / $i)) * 1000) / 1000)} - ((var(--gap) * (#{$i} - 1)) / #{$i}));
		max-width: calc(#{calc(round(percentage(calc(1 / $i)) * 1000) / 1000)} - ((var(--gap) * (#{$i} - 1)) / #{$i}));
	}

	.row>.col-#{$i} {
		flex: calc(#{calc(round(percentage(calc($i / 12)) * 1000) / 1000)} - var(--gap));
		max-width: calc(#{calc(round(percentage(calc($i / 12)) * 1000) / 1000)} - (((var(--gap) * (#{$i} / 12)) - var(--gap)) / (#{$i} / 12)));
	}

	.grid>.col-#{$i} {
		@if $i > 1 {
			grid-column: 1 / span #{$i};
		}
	}
}

@each $breakpoint, $breakpoint_width in $breakpoints {

	.#{$breakpoint}-mw {
		max-width: $breakpoint_width;
	}

	@media screen and (min-width: $breakpoint_width) {

		.row > *,
		.row.#{$breakpoint}-columns-fixed > *,
		.row > .#{$breakpoint}-col-fixed {
			flex: 1;
		}
		.row.#{$breakpoint}-columns-auto > *,
		.row > .#{$breakpoint}-col-auto {
			flex: auto;
			min-width: auto;
			max-width: none;
		}
		
		@for $i from 1 through 12 {
			.grid.#{$breakpoint}-columns-#{$i} {
				grid-template-columns: repeat($i, minmax(0, 1fr))
			}
			.row.#{$breakpoint}-columns-#{$i} > * {
				flex: calc(#{calc(round(percentage(calc(1 / $i)) * 1000) / 1000)} - var(--gap));
				min-width: calc(#{calc(round(percentage(calc(1 / $i)) * 1000) / 1000)} - ((var(--gap) * (#{$i} - 1)) / #{$i}));
				max-width: calc(#{calc(round(percentage(calc(1 / $i)) * 1000) / 1000)} - ((var(--gap) * (#{$i} - 1)) / #{$i}));
			}

			.row > .#{$breakpoint}-col-#{$i} {
				flex: calc(#{calc(round(percentage(calc($i / 12)) * 1000) / 1000)} - var(--gap));
				max-width: calc(#{calc(round(percentage(calc($i / 12)) * 1000) / 1000)} - (((var(--gap) * (#{$i} / 12)) - var(--gap)) / (#{$i} / 12)));

			}

			.grid > .#{$breakpoint}-col-#{$i} {
				@if $i > 1 {
					grid-column: 1 / span #{$i};
				}
			}
		}
	}
}
@each $s, $space in $spacing {

	.g-#{$s} {
		gap: var(--gap);
		--gap: #{$space};
	}

	@each $breakpoint, $breakpoint_width in $breakpoints {
		@media screen and (min-width: $breakpoint_width) {
			.#{$breakpoint}-g-#{$s} {
				gap: var(--gap);
				--gap: #{$space};
			}
		}
	}
}