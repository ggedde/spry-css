/*************************************
Grid Variables
**************************************/

$breakpoints: (
    sm: 600px,
    md: 900px,
    lg: 1200px,
);

$sm: map-get($breakpoints, 'sm');
$md: map-get($breakpoints, 'md');
$lg: map-get($breakpoints, 'lg');

$row-width: 65rem;
$gutter-width: 2rem;

/*************************************
Colors
**************************************/

$color-white:        #ffffff;
$color-light:        #eeeeee;
$color-grey-light:   #aaaaaa;
$color-grey:         #888888;
$color-grey-dark:    #555555;
$color-dark:         #333333;
$color-black:        #000000;

$color-primary:      #439ED7;
$color-anchor:       #3388cc;
$color-anchor-hover: darken($color-anchor, 10%);

$transparent: rgba($color-black, 0);
$shadow: rgba(0,0,0,0.1);

$bg-colors: (
    'none': $transparent,
    'white': $color-white,
    'grey': $color-grey,
    'grey-light': $color-grey-light,
    'grey-dark': $color-grey-dark,
);

$bg-colors-with-light-text: (
    'image',
    'video',
    'grey',
    'grey-dark',
);

/*************************************
Sizing
**************************************/

// Applies to Margin and Padding.  Ex .m0, .m1, .mx3, .pt3, .mtn3, etc
$spacing: (
    0: 0, 
    1: .25, 
    2: .5, 
    3: 1, 
    4: 2, 
    5: 3, 
    6: 5
);

// This will also create classes like .h3 etc. Mobile size will be 10% smaller
$headings: (
    h1: 3rem,
    h2: 2.5rem,
    h3: 2.25rem,
    h4: 1.5rem,
    h5: 1rem,
    h6: .75rem,
);

$section-padding: 4rem;
$header-height: 60px;

/*************************************
Normalize
**************************************/
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; vertical-align: baseline; box-sizing: border-box; outline: none !important }
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, img, video { display: block; max-width: 100% }
body { line-height: 1 }
blockquote, q { quotes: none }
blockquote:before, blockquote:after, q:before, q:after { content: ''; content: none }
table { border-collapse: collapse; border-spacing: 0; width: 100% }
sub, sup { font-size: .75rem; vertical-align: baseline; position: relative; top: -0.375rem }
sub { top: .375rem }
b, strong { font-weight: bold; font-weight: 600 }
i, em { font-style: italic }

/*************************************
Typography
**************************************/
body, input, textarea, select {
    font-size: 14px;
    font-family: Roboto, -apple-system, BlinkMacSystemFont, "Segoe UI", "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    font-weight: 300;
    letter-spacing: 0.01em;
    line-height: 1.6;
    color: $color-grey-dark;
    @include min($sm) {
        font-size: 16px;
    }
}

// Heading Font Sizes and Classes
@each $heading, $headingsize in $headings {
    .#{$heading}, #{$heading} {
        font-size: #{($headingsize * .9)};
        font-weight: 400;
        line-height: 1.2;
        @include min($sm) {
            font-size: #{$headingsize};
        }
        p + & {
            margin-top: 2rem;
        }
    }
}

p, h1, h2, h3, h4, h5, h6 {
    & + p {
        margin-top: 1rem;
    }
}

a {
    cursor: pointer;
    color: $color-anchor;
    text-decoration: none;
    transition: color 0.2s ease-in-out;
    &:hover {
        text-decoration: none;
        color: $color-anchor-hover;
    }
}

blockquote {
	margin: 1rem;
	&::before {
		content: '\201C';
	}
	&::after {
		content: '\201D';
	}
	p {
		font: inherit;
		display: inline;
		color: inherit;
	}
}
/*************************************
General Utility Classes
**************************************/
.fade { opacity: .8 }
.bold{ font-weight: bold }
.regular{ font-weight: normal }
.italic{ font-style: italic }
.uppercase{ text-transform: uppercase }
.lowercase{ text-transform: lowercase }
.capitalize{ text-transform: capitalize }
.rounded{ border-radius: 3px }
.circle{ border-radius:50% }
.relative{ position:relative }
.absolute{ position:absolute }
.fixed{ position:fixed }
.top-0{ top:0 }
.right-0{ right:0 }
.bottom-0{ bottom:0 }
.left-0{ left:0 }
.h-100 { height: 100% }
.w-100 { width: 100% }
.truncate{
	max-width:100%;
	overflow:hidden;
	text-overflow:ellipsis;
	white-space:nowrap;
}

/****************************************************************************
Layout Utility Classes - Can include Grid Prefix Ex. .sm-left .md-right, etc
****************************************************************************/
// Text
.left{ text-align: left }
.center{ text-align: center }
.right{ text-align: right }
.justify{ text-align: justify }
.nowrap{ white-space: nowrap }
.break-word{ word-wrap: break-word }
.underline{ text-decoration: underline }
// Display
.inline{ display: inline }
.flex{ display: flex }
.block{ display: block }
.none{ display: none }
.inline-block{ display: inline-block }
.table{ display: table }
.table-cell{ display: table-cell }
// Vertical Align
.align-baseline{ vertical-align: baseline }
.align-top{ vertical-align: top }
.align-middle{ vertical-align: middle }
.align-bottom{ vertical-align: bottom }
// Overflow
.overflow-hidden{ overflow: hidden }
.overflow-scroll{ overflow: scroll }
.overflow-auto{ overflow: auto }
// Order
.order-first{ order:-1 }
.order-0{ order:0 }
.order-1{ order:1 }
.order-2{ order:2 }
.order-3{ order:3 }
.order-last{ order:99999 }

/*************************************
Flex Utility Classes
**************************************/
.align-items-start{ align-items: flex-start }
.align-items-end{ align-items: flex-end }
.align-items-center{ align-items: center }
.align-items-stretch{ align-items: stretch }
.align-content-start{ align-content: flex-start }
.align-content-end{ align-content: flex-end }
.align-content-center{ align-content: center }
.align-content-between{ align-content: space-between }
.align-content-around{ align-content: space-around }
.align-content-stretch{ align-content: stretch }
.justify-content-start{ justify-content: flex-start }
.justify-content-end{ justify-content: flex-end }
.justify-content-center{ justify-content: center }
.justify-content-between{ justify-content: space-between }
.justify-content-around{ justify-content: space-around }

/*************************************
Padding and Margin Utility Classes
**************************************/
.m-auto {
	margin: auto;
}
.my-auto {
	margin-top: auto;
	margin-bottom: auto;
}
.mx-auto {
	margin-right: auto;
	margin-left: auto;
}
@each $i, $space in $spacing {
	@each $prop in (padding, margin) {
		.#{str-slice($prop, 0, 1)}-#{$i} {
			#{$prop}: #{$space}rem;
		}
		.#{str-slice($prop, 0, 1)}x-#{$i} {
			#{$prop}-right: #{$space}rem;
			#{$prop}-left: #{$space}rem;
		}
		.#{str-slice($prop, 0, 1)}y-#{$i} {
			#{$prop}-top: #{$space}rem;
			#{$prop}-bottom: #{$space}rem;
		}
		@if $prop == margin and $i > 0 {
			.#{str-slice($prop, 0, 1)}-n#{$i} {
				#{$prop}: -#{$space}rem;
			}
			.#{str-slice($prop, 0, 1)}x-n#{$i} {
				#{$prop}-right: -#{$space}rem;
				#{$prop}-left: -#{$space}rem;
			}
			.#{str-slice($prop, 0, 1)}y-n#{$i} {
				#{$prop}-top: -#{$space}rem;
				#{$prop}-bottom: -#{$space}rem;
			}
		}
		@each $side in (top, bottom, left, right){	
			.#{str-slice($prop, 0, 1)}#{str-slice($side, 0, 1)}-#{$i} {
				#{$prop}-#{$side}: #{$space}rem;
			}
			@if $prop == margin and $i > 0 {
				.#{str-slice($prop, 0, 1)}#{str-slice($side, 0, 1)}-n#{$i} {
					#{$prop}-#{$side}: -#{$space}rem;
				}
			}
		}
	}
}

// Grid
.row {
	display: flex;
	flex-wrap: wrap;
	> * {
		flex: 1;
		padding-left: ($gutter-width / 2);
		padding-right: ($gutter-width / 2);
	}
	.row {
		margin-left: -#{($gutter-width / 2)};
		margin-right: -#{($gutter-width / 2)};
	}
}

@for $i from 1 through 12 {
	.row .col-#{$i} {
		flex: 0 0 auto;
		width: percentage($i / 12);
	}
}

@each $breakpoint, $breakpoint_width in $breakpoints {

	.#{$breakpoint}-mw {
		max-width: $breakpoint_width;
		margin: auto;
	}

	.#{$breakpoint}-row {
		> * {
			padding-left: ($gutter-width / 2);
			padding-right: ($gutter-width / 2);
		}
		.#{$breakpoint}-row {
			margin-left: -#{($gutter-width / 2)};
			margin-right: -#{($gutter-width / 2)};
		}
	}

	@include min($breakpoint_width) {

		// Flex
		.#{$breakpoint}-row {
			display: flex;
			flex-wrap: wrap;
			> * {
				flex: 1 1 auto;
				padding-left: ($gutter-width / 2);
				padding-right: ($gutter-width / 2);
			}
		}

		// Columns
		@for $i from 1 through 12 {
			.#{$breakpoint}-row .col-#{$i} {
				flex: 0 0 auto;
				width: percentage($i / 12);
			}
			.#{$breakpoint}-col-#{$i} {
				flex: 0 0 auto;
				width: percentage($i / 12) !important;
			}
		}

		// Utilities
		.#{$breakpoint} {
			&-left{ text-align: left }
			&-center{ text-align: center }
			&-right{ text-align: right }
			&-justify{ text-align: justify }
			&-nowrap{ white-space: nowrap }
			&-break-word{ word-wrap: break-word }
			&-underline{ text-decoration: underline }
			&-inline{ display: inline }
			&-flex{ display: flex }
			&-block{ display: block }
			&-none{ display: none }
			&-inline-block{ display: inline-block }
			&-table{ display: table }
			&-table-cell{ display: table-cell }
			&-align-baseline{ vertical-align: baseline }
			&-align-top{ vertical-align: top }
			&-align-middle{ vertical-align: middle }
			&-align-bottom{ vertical-align: bottom }
			&-overflow-hidden{ overflow: hidden }
			&-overflow-scroll{ overflow: scroll }
			&-overflow-auto{ overflow: auto }
			&-order-first{ order:-1 }
			&-order-0{ order:0 }
			&-order-1{ order:1 }
			&-order-2{ order:2 }
			&-order-3{ order:3 }
			&-order-last{ order:99999 }
		}
	}
}
