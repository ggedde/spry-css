/*! 
* Spry Colors
*/

.bg-contrast {
	background-color: var(--spry-color-dark);
}
.contrast {
	--spry-text-color: var(--spry-color-dark);
	color: --spry-text-color;
}
button.contrast,
[role=button].contrast {
	--spry-accent-color: var(--spry-color-dark);
	--spry-text-color: var(--spry-color-light);
}

[data-theme-dark] {
	// --spry-color-light: #{map-get($colors, 'dark')};
	// --spry-color-dark : #{map-get($colors, 'light')};
	// --spry-color-text : #{map-get($colors, 'light')};

	.bg-contrast {
		background-color: var(--spry-color-light);
	}
	.contrast {
		--spry-text-color: var(--spry-color-light);
		color: --spry-text-color;
	}
	button.contrast,
	[role=button].contrast {
		--spry-accent-color: var(--spry-color-light);
		--spry-text-color: var(--spry-color-dark);
	}
}



@each $color_name,
$color_value in $colors {

	.#{$color_name},
	.alert-#{$color_name},
	.link-#{$color_name} a,
	.link-hover-#{$color_name} a:not([role=button]):not([class*="hover-"]):hover,
	.link-hover-#{$color_name} a:not([role=button]):not([class*="hover-"]):focus {
		--spry-accent-color: var(--spry-color-#{$color_name});
		--spry-accent-color-rgb: var(--spry-color-#{$color_name}-rgb);
		--spry-text-color: var(--spry-color-#{$color_name});
		color: var(--spry-text-color);
	}

	button.#{$color_name},
	[role=button].#{$color_name} {
		--spry-accent-color: var(--spry-color-#{$color_name});
		--spry-accent-color-rgb: var(--spry-color-#{$color_name}-rgb);
		@if $color_name !=inherit {
			@if (lightness($color_value) > 70) {
				--spry-text-color: #{map-get($colors, 'dark')};
			} @else {
				--spry-text-color: #{map-get($colors, 'light')};
			}
		}
	}

	.bg-#{$color_name} {
		background-color: var(--spry-color-#{$color_name});
		@if $color_name !=inherit {
			@if (lightness($color_value) > 70) {
				--spry-text-color: #{map-get($colors, 'text')};
			} @else {
				--spry-text-color: #{map-get($colors, 'light')};
			}
			color: var(--spry-text-color);
		}
	}

	.alert-#{$color_name},
	article.accent-#{$color_name},
	.accent-#{$color_name} .border:not([class*="border-"]):hover,
	.accent-#{$color_name} .border:not([class*="border-"]),
	.alert.border-#{$color_name},
	[class*="accent-"].border-#{$color_name} {
		border-color: var(--spry-color-#{$color_name});
	}

	@if $color_name !=inherit {
		.accent-#{$color_name} {
			--spry-accent-color: var(--spry-color-#{$color_name});
			--spry-accent-color-rgb: var(--spry-color-#{$color_name}-rgb);
		}
	}
}

article {
	--spry-accent-color  : var(--spry-color-light);
	--spry-btn-color     : var(--spry-color-light);
	--spry-btn-color-text: #{map-get($colors, 'text')};
}

[data-theme-dark] {
	background-color: darken(map-get($colors, 'dark'), 15%);
	color           : map-get($colors, 'light');

	article,
	.bg-light {
		background-color     : darken(map-get($colors, 'dark'), 7%);
		color                : map-get($colors, 'light');
		--spry-btn-color-text: #{map-get($colors, 'light')};
	}

	.bg-dark {
		background-color: darken(map-get($colors, 'dark'), 5%);
		color           : map-get($colors, 'light');
	}

	.btn-dark,
	a.btn-dark {
		--spry-btn-color     : #{darken(map-get($colors, 'dark' ), 5%)};
		--spry-btn-color-rgb : #{red(darken(map-get($colors, 'dark' ), 5%)), green(darken(map-get($colors, 'dark' ), 5%)), blue(darken(map-get($colors, 'dark' ), 5%))};
		--spry-btn-color-text: #{map-get($colors, 'light' )};
	}

	.btn.btn-dark.btn-outline {
		border-color: map-get($colors, 'light');
		color       : map-get($colors, 'light');

		&:hover {
			background-color: darken(map-get($colors, 'dark'), 10%);
			border-color    : map-get($colors, 'light');
			color           : map-get($colors, 'light');
		}
	}

	.btn-dark.btn-hazy,
	.btn-dark.btn-link {
		color: map-get($colors, 'light');
	}

	select option {
		background: #333;
		color     : #eee;
	}
}

// button:not([class*="color-"]),
// a[role=button]:not([class*="color-"]),
// a[role=button]:not([class*="color-"]):hover,
// a[role=button]:not([class*="color-"]):focus,
// input[type="submit"]:not([class*="color-"]) {
// 	color: var(--spry-btn-color-text);

// 	&.outline:not([class*="color-"]),
// 	&.hazy:not([class*="color-"]),
// 	&.link:not([class*="color-"]) {
// 		color: var(--spry-btn-color-text);
// 	}
// }

@each $color_name,
$color_value in $colors {

	a.#{$color_name},
	.hover-#{$color_name}:hover,
	.hover-#{$color_name}:focus,
	a.hover-#{$color_name}:hover,
	a.hover-#{$color_name}:focus,
	a[role=button].hover-#{$color_name}:hover,
	a[role=button].hover-#{$color_name}:focus,
	button.hover-#{$color_name}:hover,
	button.hover-#{$color_name}:focus {
		--spry-text-color: var(--spry-color-#{$color_name});
	}
}