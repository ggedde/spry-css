/*
* Spry Colors
*/

@use "variables"as *;

// Set Defaults
.contrast {
	--color: var(--dark);
}

button,
[type=submit],
[role=button],
[role=alert] {
	@if (lightness(map-get($colors, 'default')) > 70) {
		--text-color: #{map-get($colors, 'dark')};
	}

	@else {
		--text-color: #{map-get($colors, 'light')};
	}
}

// Update Prefered Theme Dark Colors
@media (prefers-color-scheme: dark) {
	select option {
		background: var(--dark);
		color     : var(--light);
	}
}

// Update Dark Theme Colors
[data-theme-dark] {

	--contrast: map-get($colors, 'light');

	background-color: darken(map-get($colors, 'dark'), 15%);
	--text-color    : var(--light);
	--text-color-rgb: var(--light-rgb);
	color           : var(--text-color);

	button.contrast,
	[type=submit].contrast,
	form.contrast [type=submit],
	[role=button].contrast,
	[role=alert].contrast {
		--text-color: var(--dark);
		&:is(.hazy,.outline,.link) {
			--text-color: var(--light);
		}
	}

	.contrast {
		--color: var(--light);
	}

	--card-color: var(--dark);
	
	article,
	.bg-light {
		background-color: darken(map-get($colors, 'dark'), 7%);
	}

	.bg-dark {
		background-color: darken(map-get($colors, 'dark'), 5%);
	}

	select option,
	[role=tooltip] {
		background-color: var(--dark);
		color     : var(--light);
	}
}

// Loop Colors.
@each $color_name,
$color_value in $colors {

	a.color-#{$color_name},
	.hover-#{$color_name}:hover,
	.hover-#{$color_name}:focus,
	a.hover-#{$color_name}:hover,
	a.hover-#{$color_name}:focus,
	a[role=button].hover-#{$color_name}:hover,
	a[role=button].hover-#{$color_name}:focus,
	button.hover-#{$color_name}:hover,
	button.hover-#{$color_name}:focus {
		--text-color    : var(--#{$color_name});
		--text-color-rgb: var(--#{$color_name}-rgb);
		color           : var(--text-color);
	}

	button.#{$color_name},
	[type=submit].#{$color_name},
	[role=button].#{$color_name},
	[role=alert].#{$color_name} {
		@if (lightness($color_value) > 70) {
			--text-color: #{map-get($colors, 'dark')};
		}

		@else {
			--text-color: #{map-get($colors, 'light')};
		}
	}

	.border-#{$color_name} {
		border-color: var(--#{$color_name});
	}

	.bg-#{$color_name},
	[role=tooltip].bg-#{$color_name} {
		background-color: var(--#{$color_name});
	}
}

@each $color_name,
$color_value in $colors {

	[class].#{$color_name}:not(article) {
		--color          : var(--#{$color_name});
		--color-rgb      : var(--#{$color_name}-rgb);
	}
	article.#{$color_name} {
		--card-color: var(--#{$color_name});
	}
	.icon.#{$color_name},
	.color-#{$color_name},
	[class*=color-#{$color_name}],
	.link-#{$color_name} a,
	.link-hover-#{$color_name} a:not([role=button]):not([class*="hover-"]):hover,
	.link-hover-#{$color_name} a:not([role=button]):not([class*="hover-"]):focus {
		--text-color     : var(--#{$color_name});
		--text-color-rgb : var(--#{$color_name}-rgb);
		color            : var(--text-color);
	}
}