/*! 
* Spry Colors
*/
.dark {
	--spry-color-light: #{map-get($colors, 'dark')};
	--spry-color-dark: #{map-get($colors, 'light')};
	--spry-color-text: #{map-get($colors, 'light')};
}

@each $color_name, $color_value in $colors {
	.bg-#{$color_name} {
		background-color: var(--spry-color-#{$color_name});
	}
	.alert-#{$color_name},
	.link-color-#{$color_name} a {
		color: var(--spry-color-#{$color_name});
	}
	.link-color-hover-#{$color_name} a:not(.btn):not([class*="color-hover-"]):hover,
	.link-color-hover-#{$color_name} a:not(.btn):not([class*="color-hover-"]):focus {
		color: var(--spry-color-#{$color_name});
	}
	.border-#{$color_name},
	.border-#{$color_name}:hover,
	.border-#{$color_name}:focus,
	.alert-#{$color_name},
	.accent-#{$color_name} .border:not([class*="border-"]):hover,
	.accent-#{$color_name} .border:not([class*="border-"]) {
		border-color: var(--spry-color-#{$color_name});
	}
	@if $color_name !=inherit {
		.accent-#{$color_name},
		.btn-#{$color_name} {
			--spry-btn-color: var(--spry-color-#{$color_name});
			--spry-btn-color-hazy: #{rgba($color_value, 10%)};
			--spry-btn-color-hazier: #{rgba($color_value, 20%)};
			--spry-btn-color-text: #{map-get($colors, 'white')};
		}
	}
	.btn-outline,
	.btn-hazy,
	.btn-link {
		--spry-btn-color-text: var(--spry-btn-color);
	}
	.accent-#{$color_name} {
		--spry-accent-color: var(--spry-color-#{$color_name});
		@if $color_name !=light {
			--spry-card-accent-text: white;
		}
		@if $color_name !=inherit {
			tbody tr:hover td {
				background-color: rgba($color_value, .04);
			}
		}
	}
}

.dark {
	background-color: darken(map-get($colors, 'dark' ), 15%);
	color: map-get($colors, 'light' );
	article,
	.bg-light {
		background-color: darken(map-get($colors, 'dark' ), 7%);
		color: map-get($colors, 'light' );
	}
	.bg-dark {
		background-color: darken(map-get($colors, 'dark' ), 5%);
		color: map-get($colors, 'light' );
	}
	.btn-dark,
	a.btn-dark {
		--spry-btn-color: #{darken(map-get($colors, 'dark' ), 5%)};
		--spry-btn-color-text: #{map-get($colors, 'light' )};
	}
	.btn.btn-dark.btn-outline {
		border-color: map-get($colors, 'light' );
		color: map-get($colors, 'light' );
		&:hover {
			background-color: darken(map-get($colors, 'dark' ), 10%);
			border-color: map-get($colors, 'light' );
			color: map-get($colors, 'light' );
		}
	}
	.btn-dark.btn-hazy,
	.btn-dark.btn-link {
		color: map-get($colors, 'light' );
	}
}

.btn,
a.btn,
a.btn:hover,
a.btn:focus,
input[type="submit"] {
	color: var(--spry-btn-color-text);

	&.btn-outline:not([class*="color-"]),
	&.btn-hazy:not([class*="color-"]),
	&.btn-link:not([class*="color-"]) {
		color: var(--spry-btn-color-text);
	}
}

@each $color_name, $color_value in $colors {
	.color-#{$color_name},
	a.color-#{$color_name},
	a.btn.color-#{$color_name},
	.color-hover-#{$color_name}:hover,
	.color-hover-#{$color_name}:focus,
	a.color-hover-#{$color_name}:hover,
	a.color-hover-#{$color_name}:focus,
	a.btn.color-hover-#{$color_name}:hover,
	a.btn.color-hover-#{$color_name}:focus,
	button.color-#{$color_name},
	button.color-hover-#{$color_name}:hover,
	button.color-hover-#{$color_name}:focus {
		color: var(--spry-color-#{$color_name});
	}
}