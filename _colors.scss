/*!
* Spry Colors
*/

@use "variables"as *;

$color_names: ();
@each $color_name, $color_value in $colors {
    $color_names: append($color_names, '.#{$color_name}', 'comma');
}

:is(button,.button,.alert,.badge,[type=submit],[type=reset]):is(.link, .outline, .hazy, .plain):where(#{$color_names}) {
	--text-color: var(--color);
	color: var(--color);
}

:where(#{$color_names}):not(article) :is(.link, .outline, .hazy, .plain) {
	color: var(--color);
}

// Initial Color sets
@each $color_name,
$color_value in $colors {

	article.#{$color_name} {
		--card-color  : var(--#{$color_name});
		--border-color: var(--card-color);
	}
}

// First Color Overrides
@each $color_name,
$color_value in $colors {

	.links-#{$color_name} a:not(.button),
	.links-hover-#{$color_name} a:not(.button):is(:hover, :focus) {
		color : var(--#{$color_name});
	}
}

// Final Color Overrides
@each $color_name,
$color_value in $colors {

	[class].#{$color_name} {
		--color     : var(--#{$color_name});
		--color-rgb : var(--#{$color_name}-rgb);
	}

	[class].color-#{$color_name},
	.hover-#{$color_name}:is(:hover, :focus) {
		--text-color     : var(--#{$color_name});
		color            : var(--text-color);
	}

	.bg-#{$color_name},
	:is(.tooltip, article).bg-#{$color_name} {
		background-color: var(--#{$color_name});
	}

	.bg-#{$color_name}-hazy,
	:is(.tooltip, article).bg-#{$color_name}-hazy {
		background-color: rgba(var(--#{$color_name}-rgb), .3);
	}

	.border-#{$color_name} {
		--border-color: var(--#{$color_name});
		--input-border-color: var(--#{$color_name});
		border-color  : var(--border-color);
	}

	.border-#{$color_name}-hazy {
		--border-color: rgba(var(--#{$color_name}-rgb), .3);
		--input-border-color: rgba(var(--#{$color_name}-rgb), .3);
		border-color  : var(--border-color);
	}
}