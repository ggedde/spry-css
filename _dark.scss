/*!
* Spry Dark Theme
*/

@use "variables"as *;

// Update Prefered Theme Dark Colors
@media (prefers-color-scheme: dark) {
	select option {
		background: #1b1b1b;
		color     : #efefef;
	}
}

:root[data-theme=dark], [data-theme=dark] {

	--border-color-rgb: 70,70,70;
	--border-color: rgb(var(--border-color-rgb));
	--bdr: solid var(--border-color);

	@each $color_name, $color_value in $colors {
		@if map-get($color_value, 'dark') {

			// Set each color variable.
			--#{$color_name}    : #{map-get($color_value, 'dark')};
			--#{$color_name}-rgb: #{red(map-get($color_value, 'dark')), green(map-get($color_value, 'dark')), blue(map-get($color_value, 'dark'))};

			// Use the first color as the Default UI color.
			@if index($colors, ($color_name $color_value)) == 1 {
				
				--color      : #{map-get($color_value, 'dark')};
				--color-rgb  : #{red(map-get($color_value, 'dark')), green(map-get($color_value, 'dark')), blue(map-get($color_value, 'dark'))};

				// For the default UI Color, check to see if the text should be light or dark.
				@if (lightness(map-get($color_value, 'dark')) > 70) {
					--text-color: #{map-get(map-get($colors, 'text'), 'light')};
				}
	
				@else {
					--text-color: #{map-get(map-get($colors, 'text'), 'dark')};
				}
			}
		}
	}
}

[data-theme=dark] {
	color-scheme: dark;
	color: map-get(map-get($types, 'body'), 'color');

	&,
	article {
		background-color: #121212;
	}

	select option,
	.tooltip {
		background-color: #262626;
		color           : #efefef;
	}

	@each $color_name, $color_value in $colors {
		@if map-get($color_value, 'dark') {

			// For each UI color Class, check to see if the text should be light or dark.
			.#{$color_name} {
				@if (lightness(map-get($color_value, 'dark')) > 70) {
					--text-color: #{map-get(map-get($colors, 'text'), 'light')};
				}

				@else {
					--text-color: #{map-get(map-get($colors, 'text'), 'dark')};
				}
			}
		}
	}
}