/*!
* Spry Mixins
*/

@use "variables"as *;

/// Min Width Media Query
/// @param {String | Unit} $min - Minimum Value. String must be included in $breakpoints.
/// @output - Contents
@mixin min($min){
	@if type-of($min) == string {
		@media only screen and (min-width: map-get($breakpoints, $min)) {
			@content;
		}
	} @else {
		@media only screen and (min-width: $min) {
			@content;
		}
	}
}

/// Max Width Media Query
/// @param {String | Unit} $max - Max Value. String must be included in $breakpoints.
/// @output - Contents
@mixin max($max){
	@if type-of($max) == string {
		@media only screen and (max-width: map-get($breakpoints, $max)) {
			@content;
		}
	} @else {
		@media only screen and (max-width: $max) {
			@content;
		}
	}
}

/// Min - Max Width Media Query
/// @param {String | Unit} $min - Min Value. String must be included in $breakpoints.
/// @param {String | Unit} $max - Max Value. String must be included in $breakpoints.
/// @output - Contents
@mixin in($min, $max){
	@if type-of($min) == string {
		@if type-of($max) == string {
			@media only screen and (min-width: map-get($breakpoints, $min)) and (max-width: map-get($breakpoints, $max)) {
				@content;
			}
		} @else {
			@media only screen and (min-width: map-get($breakpoints, $min)) and (max-width: $max) {
				@content;
			}
		}
	} @else {
		@if type-of($max) == string {
			@media only screen and (min-width: $min) and (max-width: map-get($breakpoints, $max)) {
				@content;
			}
		} @else {
			@media only screen and (min-width: $min) and (max-width: $max) {
				@content;
			}
		}
	}
}