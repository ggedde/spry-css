/*! 
* Spry UI
*/
.btn,
button,
input,
textarea,
select,
nav>a,
.toolbar,
nav li>a {
	position       : relative;
	appearance     : none;
	color          : inherit;
	background     : transparent;
	min-height     : clamp(34px, 5vw, 40px);
	min-width      : clamp(34px, 5vw, 40px);
	height         : auto;
	padding        : 0 1rem;
	width          : 100%;
	display        : inline-flex;
	align-items    : center;
	text-decoration: none;
	outline        : none;
	vertical-align : middle;
	border         : 0;
}

button {
	width: auto;
}

.btn,
.toolbar,
input,
textarea,
select,
nav>a {

	&.lg,
	.lg & {
		min-height: clamp(44px, 5vw, 50px);
		min-width : clamp(44px, 5vw, 50px);
	}

	&.sm,
	.sm & {
		min-height: clamp(26px, 5vw, 30px);
		min-width : clamp(26px, 5vw, 30px);
	}

	&.xs,
	.xs & {
		min-height: 24px;
		min-width : 24px;
	}
}

nav {

	& li.lg>a,
	& li.lg li>a,
	&.lg li>a,
	&.lg li>button {
		min-height: clamp(44px, 5vw, 50px);
		min-width : clamp(44px, 5vw, 50px);
	}

	& li.sm>a,
	& li.sm li>a,
	&.sm li>a,
	&.sm li>button {
		min-height: clamp(26px, 5vw, 30px);
		min-width : clamp(26px, 5vw, 30px);
	}

	& li.xs>a,
	& li.xs li>a,
	&.xs li>a,
	&.xs li>button {
		min-height: 24px;
		min-width : 24px;
	}
}

input,
textarea,
select {
	&:hover,
	&:focus {
		border-color: var(--spry-accent-color);
	}
	&:focus {
		box-shadow: inset 0 0 0 1px var(--spry-accent-color);
	}
}

.btn,
input,
textarea,
select,
.list li>a,
.list li>button {
	transition     : color .2s ease-in-out, background-color .2s ease-in-out, border-color .2s ease-in-out, filter .1s ease-in-out;
	border         : 1px solid map-get($colors, 'medium');
	color          : inherit;
	border-radius  : 3px;
	justify-content: center;

	::placeholder {
		color: #999;
	}

	&:disabled {
		opacity: .6;
		cursor : not-allowed;
	}
}

a, 
.btn,
button,
input,
textarea,
select,
form {
	&:disabled,
	&.disabled {
		opacity: .6;
		pointer-events: none;
	}
}

input[type="checkbox"],
input[type="radio"] {
	width         : 1rem;
	min-height    : 1rem;
	padding       : 0;
	margin        : 0 .6rem 0 .4rem;
	position      : relative;
	min-width     : 0;
	vertical-align: text-bottom;

	&:checked {
		border-color: var(--spry-accent-color);

		&::after {
			content         : '';
			position        : absolute;
			inset           : 2px;
			background-color: var(--spry-accent-color);
			border-radius   : 2px;
		}
	}
}

input[type="radio"] {

	&,
	&:checked::after {
		border-radius: 50%;
	}
}

.toggle {
	cursor: pointer;

	input[type="checkbox"] {
		appearance: none;
		border    : 0 !important;
	}

	&:not(.btn-menu) input[type="checkbox"] {
		display: none;

		&::after {
			display: none;
		}
	}
}

.toggle+*,
nav>ul>li>ul {
	max-height      : 1px;
	opacity         : 0;
	pointer-events  : none;
	position        : relative;
	transform       : scaleY(.8) translateY(-4px);
	transform-origin: top;
	transition      : transform .1s ease-in-out, opacity .05s ease-in-out, max-height .3s cubic-bezier(0, 1, 0, 1); // Out
	transition-delay: .1s;
	z-index         : 1;
}

.toggle:has(:checked)+*,
.toggle.hoverable:hover+*,
.toggle+.open,
.hoverable>ul>li:hover>ul,
nav li>ul:focus-within {
	max-height    : 100vh;
	opacity       : 1;
	pointer-events: all;
	transform     : scaleY(1.000001);
}

@each $breakpoint,
$breakpoint_width in $breakpoints {
	@media screen and (min-width: $breakpoint_width) {

		.toggle.#{$breakpoint}-hoverable:hover+*,
		.toggle+.#{$breakpoint}-open,
		.#{$breakpoint}-hoverable>ul>li:hover>ul {
			max-height    : 100vh;
			opacity       : 1;
			pointer-events: all;
			transform     : scaleY(1.000001);
		}
	}
}

.btn,
input[type="submit"] {
	background-color: var(--spry-btn-color);
	border-color    : var(--spry-btn-color);
}

.btn,
a.btn:hover,
input[type="submit"] {
	color: var(--spry-btn-color-text);

	&.btn-outline:not([class*="color-"]),
	&.btn-link:not([class*="color-"]) {
		color: var(--spry-btn-color-text);
	}

	&.btn-link {
		border-color: transparent;
	}

	&:hover:not(:active),
	&:focus:not(:active) {
		filter: brightness(1.15);
	}
}

.btn,
.list li>a,
.list li>button,
input[type="submit"] {
	cursor        : pointer;
	text-align    : center;
	text-transform: uppercase;
	width         : auto;
}


.btn svg,
.list li>a svg,
.list li>button svg {
	width : 24px;
	height: 24px;
}

.btn.lg,
.lg .btn,
.list.lg li>a,
.list.lg li>button,
.lg .list li>a,
.lg .list li>button {
	svg {
		width : 32px;
		height: 32px;
	}
}

.btn.sm,
.sm .btn,
.list.sm li>a,
.list.sm li>button,
.sm .list li>a,
.sm .list li>button {
	svg {
		width : 18px;
		height: 18px;
	}
}

.btn.xs,
.xs .btn,
.list.xs li>a,
.list.xs li>button,
.xs .list li>a,
.xs .list li>button {
	svg {
		width : 16px;
		height: 16px;
	}
}


.btn,
input[type="submit"] {
	font-weight: normal;
	font-size  : 115%;

	&.sm,
	.sm & {
		font-size: 100%;
	}

	&.xs,
	.xs & {
		font-size: 85%;
	}

	&.lg,
	.lg & {
		font-size: 130%;
	}
}

.btn-outline,
.btn-link,
.list li>a,
.list li>button {
	background-color: transparent;

	&:active,
	&:focus,
	&:hover {
		background-color: var(--spry-btn-color-opaque);
		transition      : none;
	}
}

.btn-link,
.list li>a,
.list li>button {
	border-color  : transparent;
	text-transform: capitalize;

	// &:active,
	// &:focus,
	// &:hover {
	// 	background-color: var(--spry-btn-color-opaque);
	// 	transition      : none;
	// }
}

nav {
	ul {
		min-width: 200px;
	}

	li {
		position: relative;
		width   : 100%;
		display : block;
		border  : 0;
		>.btn-toggle::after {
			border-width: 1.7px;
		}
	}

	&.horizontal {
		position: relative;
		>ul {
			display  : flex;
			flex-wrap: wrap;
		}

		>a,
		>ul>li {

			display    : inline-flex;
			align-items: center;
			width      : auto;

			>.btn-toggle {
				position      : relative;
				display       : inline-block;
				// margin-left   : 6px;
				pointer-events: none;
				top           : auto;
				transform     : translateY(0);
			}

			>ul {
				position : absolute;
				top      : 100%;
				max-width: 300px;
			}
		}
	}

	@each $breakpoint,
	$breakpoint_width in $breakpoints {
		@media screen and (min-width: $breakpoint_width) {
			&.#{$breakpoint}-horizontal {
				position: relative;
				>ul {
					display  : flex;
					flex-wrap: wrap;
				}

				>a,
				>ul>li {

					display    : inline-flex;
					align-items: center;
					width      : auto;

					>.btn-toggle {
						position      : relative;
						display       : inline-block;
						// margin-left   : 6px;
						pointer-events: none;
						top           : auto;
						transform     : translateY(0);
					}

					>ul {
						position : absolute;
						top      : 100%;
						min-width: 220px;
						max-width: 300px;
					}
				}
			}
		}
	}

	&.list {

		font-size: 115%;

		&,
		>a,
		>button,
		li>a,
		li>button {
			width          : 100%;
			text-align     : left;
			justify-content: flex-start;
		}

		>a,
		>button,
		li>a,
		li>button {
			padding-top   : 0.5rem;
			padding-bottom: 0.5rem;
			border        : 0;
		}
	}

	li>a,
	li>button,
	.list li>button,
	.list li>a {
		line-height: 1.2;

		&.truncate {
			display: block;
		}
	}

	li.sm>a,
	li.xs>a {
		padding-right: 2rem;
	}
}



.btn-menu {
	position: relative;
	padding : 0;

	input {
		background-color: var(--spry-btn-color-text);
		width           : 22px;
		position        : absolute;
		border          : 0;
		min-height      : auto;
		pointer-events  : none;

		&,
		&::before,
		&::after {
			border-radius: 3px;
			bottom       : 0;
			color        : transparent !important;
			display      : block;
			height       : 2px;
			margin       : auto;
			inset        : 0;
			transition   : transform .15s ease-in-out;
		}

		&::before,
		&::after {
			content         : '';
			position        : absolute;
			transform       : translateY(-6px);
			background-color: inherit;
			width           : 100%;
		}

		&::after {
			transform: translateY(6px);
		}
	}

	&.lg input {
		width: 26px;

		&,
		&::before,
		&::after {
			height: 3px;
		}

		&::before,
		&::after {
			transform: translateY(-9px);
		}

		&::after {
			transform: translateY(9px);
		}
	}

	&.sm input {
		width: 16px;

		&::before,
		&::after {
			transform: translateY(-5px);
		}

		&::after {
			transform: translateY(5px);
		}
	}

	&.xs input {
		width: 12px;

		&::before,
		&::after {
			transform: translateY(-4px);
		}

		&::after {
			transform: translateY(4px);
		}
	}

	&.btn-link,
	&.btn-outline {
		input {
			background-color: var(--spry-btn-color);
		}
	}
}

.btn-menu:has(:checked) {
	input {
		transform: rotate(45deg);

		&::before,
		&::after {
			transform: rotate(0deg);
		}

		&::after {
			transform       : rotate(-90deg);
			background-color: inherit;
			inset           : 0;
		}
	}
}

.btn-up,
.btn-right,
.btn-down,
.btn-left,
.btn-toggle {
	padding: 0;

	input {
		border        : 0;
		pointer-events: none;
		display       : none;
	}

	&::after {
		content      : '';
		display      : block;
		position     : absolute;
		inset        : 0;
		margin       : auto;
		border       : 2px solid var(--spry-btn-color-text);
		border-left  : 0;
		border-bottom: 0;
		width        : 12px;
		height       : 12px;
		transition   : transform .2s ease-in-out;
		transform    : rotate(135deg) translate(-14%, 16%);
	}

	&.btn-link,
	&.btn-outline {
		&::after {
			border-color: var(--spry-btn-color);
		}
	}

	&.lg::after,
	.lg &::after {
		height: 16px;
		width : 16px;
	}

	&.sm::after,
	.sm &::after {
		height: 10px;
		width : 10px;
	}

	&.xs::after,
	.xs &::after {
		height: 8px;
		width : 8px;
	}

	nav li>& {
		position : absolute;
		right    : .5rem;
		top      : 20px;
		transform: translateY(-50%);
	}
}

.btn-up::after {
	transform: rotate(315deg) translate(-14%, 16%);
}

.btn-right::after {
	transform: rotate(45deg) translate(-14%, 16%);
}

.btn-left::after {
	transform: rotate(225deg) translate(-14%, 16%);
}

.btn-close {
	padding: 0;

	&::before,
	&::after {
		background-color: var(--spry-btn-color-text);
		content         : '';
		height          : 60%;
		position        : absolute;
		inset           : 0;
		margin          : auto;
		width           : 2px;
	}

	&::before {
		transform: rotate(45deg);
	}

	&::after {
		transform: rotate(-45deg);
	}

	&.btn-link,
	&.btn-outline {

		&::before,
		&::after {
			background-color: var(--spry-btn-color);
		}
	}
}

.btn-close,
.btn-menu,
.btn-toggle,
.btn-down,
.btn-up,
.btn-left,
.btn-right {

	&.text-right input,
	&.text-right::before,
	&.text-right::after {
		right: auto;
		left : 18px;
	}

	&.text-left input,
	&.text-left::before,
	&.text-left::after {
		right: 18px;
		left : auto;
	}
}

.toggle:has(:checked).btn-toggle::after,
.btn-toggle:has(:checked)::after {
	transform: rotate(-45deg) translate(-14%, 16%);
}

select {
	background-image     : url("data:image/svg+xml;utf8,<svg fill='gray' xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'><path d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/></svg>");
	background-repeat    : no-repeat;
	background-position-x: 95%;
	background-position-y: 52%;
}

textarea {
	min-height : 100px;
	padding    : .75rem;
	max-width  : 100%;
	line-height: 1.2;

	.sm &,
	&.sm,
	.xs &,
	&.xs {
		min-height : 60px;
		line-height: 1.2;
	}

	.lg &,
	&.lg {
		min-height : 200px;
		line-height: 1.2;
	}
}

label {
	position: relative;
	.responsive-label {
		position: absolute;
		transform: translate(10px, calc(156% - 27px));
		transition: all .2s ease-in-out;
		transform-origin: left;
		animation: none;
	}
	&:focus-within,
	&.active {
		.responsive-label {
			transform: translate(3px, -100%) scale(0.85);
			opacity: .8;
			font-weight: 500;
		}
	}
	&:focus-within .responsive-label {
		color: var(--spry-accent-color);
		animation: labll .2s forwards ease;
	}
	&:has(.responsive-label) {
		margin-top: 1rem;
	}
}

@keyframes labll {
	0% {
		opacity: 1,
	}
	50% {
		opacity: .4;
	}
	100% {
		opacity: .8;
	}
}

@keyframes spinner {
	0% {
		transform: rotate(0deg)
	}

	90%,
	100% {
		transform: rotate(360deg)
	}
}

.loader {
	position: relative;

	&::after {
		content       : '';
		box-sizing    : border-box;
		position      : absolute;
		inset         : 0;
		margin        : auto;
		width         : 20px;
		height        : 20px;
		border-radius : 50%;
		border        : 2px solid transparent;
		border-color  : var(--spry-accent-color) var(--spry-accent-color) transparent transparent;
		opacity       : 0;
		pointer-events: none;
		transition    : opacity .3s ease-in-out .1s;
	}

	&.loading {
		pointer-events  : none;
		user-select     : none;
		cursor          : default;
		--spry-btn-color-text: transparent;
		color           : transparent;

		&::after {
			opacity  : 1;
			animation: spinner .8s ease infinite;
		}
	}

	.xs &,
	&.xs {
		&::after {
			width : 12px;
			height: 12px;
		}
	}

	.sm &,
	&.sm {
		&::after {
			width : 16px;
			height: 16px;
		}
	}

	.lg &,
	&.lg {
		&::after {
			width : 26px;
			height: 26px;
		}
	}
}

.btn.loader::after {
	border-color: white white transparent transparent;
}

table {
	width          : 100%;
	margin-top     : 1rem;
	border-collapse: collapse;

	td,
	th {
		padding   : .6rem .2rem;
		text-align: left;
	}

	thead th {
		font-weight: 500;
	}

	tbody tr {
		&:hover td {
			background-color: rgba(map-get($colors, 'primary'), .04);
		}

		td {
			border-top: 1px solid map-get($colors, 'light');
		}

		&:first-child td {
			border-color: darken(map-get($colors, 'light'), 10%);
		}
	}
}

hr {
	height          : 1px;
	border          : 0;
	background-color: map-get($colors, 'medium');
	margin          : map-get($gaps, 'default');
}

section {
	padding: (map-get($gaps, 'default') * 2) map-get($gaps, 'default');
}

@each $breakpoint,
$breakpoint_width in $breakpoints {
	@if map-get($gaps, $breakpoint) {
		@media screen and (min-width: $breakpoint_width) {
			hr {
				margin: map-get($gaps, $breakpoint);
			}

			section {
				padding: (map-get($gaps, $breakpoint) * 2) map-get($gaps, $breakpoint);
			}
		}
	}
}

@each $color_name,
$color_value in $colors {
	section.bg-#{$color_name}+section.bg-#{$color_name} {
		padding-top: 0;
	}
}

.card {
	position        : relative;
	background-color: map-get($colors, 'white');
	overflow        : hidden;
	display         : flex;
	flex-direction  : column;
	border-color    : var(--spry-card-color);

	>header,
	>footer {
		background-color: var(--spry-card-color);
		color           : var(--spry-card-color-text);
		display         : flex;
		align-items     : center;
	}

	&[class*="card-"] {

		>header,
		>footer {
			padding-top   : .80rem;
			padding-bottom: .80rem;
		}
	}

	>article {
		flex    : auto;
		overflow: auto;
	}
}

:has(>.tooltip) {
	position: relative;

	&:hover {
		z-index : 2;
	}

	.tooltip {
		width     : 90vw;
		position  : absolute;
		transition: opacity .2s ease-in-out;
		cursor    : auto;
	}

	&:not(:hover) .tooltip {
		opacity       : 0;
		pointer-events: none;
	}
}