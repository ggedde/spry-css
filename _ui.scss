/*!
* Spry UI
*/
@use "variables"as *;

button,
.button,
.alert,
.list li>a,
.list> :not(:has(>*)),
nav a,
input,
textarea,
select,
.toolbar,
.badge,
article>header,
article>footer {
	position       : relative;
	appearance     : none;
	color          : inherit;
	background     : transparent;
	min-height     : 2.3em;
	min-width      : 2.3em;
	height         : auto;
	padding-inline : 1em;
	padding-block  : .3em;
	width          : 100%;
	display        : inline-flex;
	align-items    : center;
	text-decoration: none;
	outline        : none;
	vertical-align : middle;
	border         : 0;
	font-size      : 100%;
	margin         : 0;
}

.compact,
.badge {
	min-height    : 1.7em;
	min-width     : 1.7em;
	padding-block : 0em;
	padding-inline: 0.5em;
}


button,
.button,
[role=tab],
input[type=submit] {
	width         : auto;
	cursor        : pointer;
	font-weight   : 400;
	text-align    : center;
	text-transform: uppercase;
}

.badge {
	font-weight: 500;
	width      : auto;

	&.snug {
		translate: -1em -.7em;
	}
}

:is(input, textarea, select):not(.button):hover,
:is(input, textarea, select):not(.button):focus {
	border-color: var(--color);
}

:is(input, textarea, select):not(.button):focus {
	box-shadow: inset 0 0 0 1px var(--color);
}

:is(input, textarea, select, a, button):focus-visible {
	outline       : 2px solid rgba(140, 140, 140, 0.25);
	outline-offset: 2px;

	&:hover {
		outline: none;
	}
}

:is([type=checkbox], [type=radio]):focus-visible:not(:hover) {
	outline-width: 4px;
}

button,
.button,
.alert,
[role=tab],
.badge,
input,
textarea,
select,
article {
	border         : 1px solid;
	border-color   : rgba(var(--text-color-rgb), .5);
	border-radius  : 3px;
	justify-content: center;
	transition     : color .2s ease-in-out, background .2s ease-in-out, border .15s ease-in-out, filter .2s ease-in-out;
}

a {
	cursor    : pointer;
	transition: color .1s ease-in-out;

	&:hover,
	&:focus {
		text-decoration: none;
	}
}

.alert {
	justify-content: flex-start;
	padding        : .5em 1em;

	svg {
		min-width: 1em;
	}
}

ul:has(:focus-visible) {
	max-height    : 100vh;
	opacity       : 1;
	pointer-events: all;
	transform     : scaleY(1.000001);
	pointer-events: all;
}

:is(button, .badge, .button, [role=tab], .alert, input[type=submit]) {
	background-color: var(--color);
	border-color    : var(--color);
}

:is(button, .badge, .button, [role=tab], .alert, i:empty, .icon, input[type=submit]) {
	color: var(--text-color);

	&:is(.outline, .hazy, .link) {
		--text-color: var(--color);
		color       : var(--text-color);
	}

	&:is(.link, .hazy) {
		border-color: transparent;
	}

	&:is(.link, .outline) {
		background: none;
	}

	&.hazy {
		background-color: rgba(var(--color-rgb), .1);
	}

	&.outline {
		border-width: 1px;
		border-style: solid;
		border-color: var(--color);
	}

	svg {
		fill      : currentColor;
		transform : scale(1);
		transition: all .2s ease-in-out;
		display   : block;
	}
}

:is(button, .button, [role=tab], input[type=submit]) {

	&:is(.link, .outline) {

		&:hover:not(:active),
		&:focus:not(:active),
		&:focus-within:not(:active) {
			background-color: rgba(var(--color-rgb), 0.1);
		}
	}

	&.hazy {

		&:hover:not(:active),
		&:focus:not(:active),
		&:focus-within:not(:active) {
			background-color: rgba(var(--color-rgb), 0.2);
		}
	}
}

:is(button, .button, [role=tab], a:not(.button), input[type=submit]) {

	&:hover:not(:active),
	&:focus:not(:active),
	&:focus-within:not(:active) {
		filter: brightness(1.15);
	}
}

.link {
	text-transform: capitalize;
}

.toolbar {
	justify-content: space-between;
}

@keyframes spinner {
	0% {
		transform: rotate(0deg)
	}

	90%,
	100% {
		transform: rotate(360deg)
	}
}

[aria-busy] {
	position: relative;

	&::after {
		content       : '';
		box-sizing    : border-box;
		position      : absolute;
		inset         : 0;
		margin        : auto;
		width         : 1.3em;
		height        : 1.3em;
		border-radius : 50%;
		border        : .15em solid transparent;
		border-color  : var(--text-color) var(--text-color) transparent transparent;
		opacity       : 0;
		pointer-events: none;
		transition    : opacity .3s ease-in-out .1s;
	}
}

[aria-busy=true],
:is(button, .button, [role=tab], input[type=submit])[aria-busy=true] {
	pointer-events: none;
	user-select   : none;
	cursor        : default;
	color         : transparent;

	&::after {
		opacity  : 1;
		animation: spinner .8s ease infinite;
	}
}

.toobar,
article>header,
article>footer {
	min-height: 2.9em;
}

hr {
	height          : 1px;
	border          : 0;
	background-color: var(--default);
	margin          : var(--gap);
}

section {
	padding: (calc(var(--gap) * 2)) var(--gap);
}

.hoverable>ul>li>ul,
.horizontal>ul>li>ul,
ul.hoverable>li>ul,
ul.horizontal>li>ul .toggle+*,
.closed {
	max-height      : 1px;
	min-height      : 0;
	opacity         : 0;
	padding-block   : 0;
	pointer-events  : none;
	pointer-events  : none;
	transform       : scaleY(.8) translateY(-4px);
	transform-origin: top;
	transition      : transform .1s ease-in-out, opacity .1s ease-in-out, max-height .5s cubic-bezier(0, 1, 0, 1), padding-block .5s cubic-bezier(0, 1, 0, 1); // Out
	transition-delay: .1s;
	z-index         : 2;
}

.hoverable>ul>li>ul,
.horizontal>ul>li>ul {
	position: absolute;
}

.horizontal,
.horizontal>ul {
	display: flex;

	>a,
	>li,
	>button {
		width: auto;
	}
}

@each $breakpoint,
$breakpoint_width in $breakpoints {
	@media screen and (min-width: $breakpoint_width) {

		.#{$breakpoint}-horizontal,
		.#{$breakpoint}-horizontal>ul {
			display: flex;

			>a,
			>li,
			>button {
				width: auto;
			}
		}

		.#{$breakpoint}-horizontal>ul>li>ul,
		ul.#{$breakpoint}-horizontal>li>ul {
			max-height      : 1px;
			min-height      : 0;
			opacity         : 0;
			padding-block   : 0;
			pointer-events  : none;
			transform       : scaleY(.8) translateY(-4px);
			transition-delay: .1s;
			transform-origin: top;
			transition      : transform .1s ease-in-out, opacity .1s ease-in-out, max-height .5s cubic-bezier(0, 1, 0, 1), padding-block .5s cubic-bezier(0, 1, 0, 1); // Out
			z-index         : 2;
			pointer-events  : none;
			position        : absolute;
		}
	}
}