/*!
* Spry UI
*/
@use "variables"as *;

@mixin ui-closed {
	max-height      : 0;
	min-height      : 0;
	opacity         : 0;
	pointer-events  : none;
	pointer-events  : none;
	transform       : scaleY(.8) translateY(-4px) translateZ(0);
	transform-origin: top;
	transition      : transform .1s ease-in-out, opacity .1s ease-in-out, max-height .5s cubic-bezier(0, 1, 0, 1), padding-block .5s cubic-bezier(0, 1, 0, 1); // Out
	transition-delay: .1s;
	z-index         : 2;

	&:not(.open) {
		padding-block: 0;
		margin-block: 0;
	}
}

%ui-closed {
	@include ui-closed;
}

@mixin ui-open {
	max-height    : 100vh;
	opacity       : 1;
	pointer-events: all;
	transform     : none;
	z-index       : 2;
}

%ui {
	align-items    : center;
	appearance     : none;
	background     : transparent;
	border         : 0;
	color          : inherit;
	display        : inline-flex;
	font-size      : 100%;
	height         : auto;
	margin         : 0;
	min-height     : 2.3em;
	min-width      : 2.3em;
	padding-block  : .3em;
	padding-inline : 1em;
	position       : relative;
	text-decoration: none;
	transition     : color .1s ease-in-out, background .1s ease-in-out, border .15s ease-in-out, filter .1s ease-in-out;
	vertical-align : middle;
	width          : 100%;
}

%ui-compact {
	min-height    : 1.7em;
	min-width     : 1.7em;
	padding-block : 0em;
	padding-inline: 0.5em;
	line-height   : 1;
}

%ui-spacious {
	min-height: 2.9em;
}

%ui-open {
	@include ui-open;
}

%ui-border {
	border-color : var(--color);
	border-width : 1px;
	border-style : solid;
	border-radius: .25em;
}

%ui-bg {
	background-color: var(--color);
	border-color    : var(--color);
}

%ui-hover {
	&:not(:active) {
		filter: brightness(1.15);
	}
}

%ui-bg-hover {
	&:not(:active) {
		background-color: rgba(var(--color-rgb), 0.1);
	}

	// &.hazy:not(:active) {
	// 	background-color: rgba(var(--color-rgb), 0.4);
	// }
}

%ui-focus-visible {
	&:focus-visible {
		outline       : 2px solid rgba(140, 140, 140, 0.25);
		outline-offset: 2px;
	}
}

%ui-color {
	@if (lightness(map-get($colors, 'default')) > 70) {
		--text-color    : var(--dark);
		--text-color-rgb: var(--dark-rgb);
	}

	@else {
		--text-color    : var(--light);
		--text-color-rgb: var(--light-rgb);
	}

	color: var(--text-color);

	svg {
		fill      : currentColor;
		transform : scale(1);
		transition: all .2s ease-in-out;
		display   : block;
	}
}

%ui-loading {
	&[aria-busy=true] {
		pointer-events: none;
		user-select   : none;
		cursor        : default;
		color         : transparent;

		&::after {
			opacity  : 1;
			animation: spinner .8s ease infinite;
		}
	}
}

%ui-margin-above {
    margin-top: .5em;
}

%ui-margin-above-lg {
    margin-top: 1em;
}

.ui {
	@extend %ui;
	@extend %ui-bg;
	@extend %ui-color;
	@extend %ui-border;
}

.compact {
	@extend %ui-compact;
}

.spacious {
	@extend %ui-spacious;
}

a {
	@extend %ui-focus-visible;
	cursor    : pointer;
	transition: color .1s ease-in-out;

	&:hover,
	&:focus {
		@extend %ui-hover;
		text-decoration: none;
	}
}

.link,
.outline:not(.list, .tabs),
.hazy {
	--text-color    : var(--color);
	--text-color-rgb: var(--color-rgb);
	color           : var(--text-color);
}

.link,
.hazy {
	border-color: transparent;
}

.link,
.outline {
	background: transparent;
}

.hazy {
	background-color: rgba(var(--color-rgb), .1);
}

.link {
	text-transform: capitalize;
}

hr {
	height          : 1px;
	border          : 0;
	background-color: var(--default);
	margin          : var(--gap);
}

section {
	padding: (calc(var(--gap) * 2)) var(--gap);
}