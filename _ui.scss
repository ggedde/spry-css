/*!
* Spry UI
*/
@use "variables"as *;

button,
.button,
.alert,
.toolbar,
.badge,
nav a,
input,
textarea,
select,
article>header,
article>footer {
	align-items    : center;
	appearance     : none;
	background     : transparent;
	border         : 0;
	border-radius  : .25em;
	color          : inherit;
	display        : inline-flex;
	height         : auto;
	min-height     : 2.3em;
	min-width      : 2.3em;
	position       : relative;
	text-decoration: none;
	vertical-align : middle;
	width          : 100%;
	padding-inline : 1em;
	padding-block  : .3em;
	font-size      : 100%;
	margin         : 0;
}

.compact,
.badge {
	min-height    : 1.7em;
	min-width     : 1.7em;
	padding-block : 0em;
	padding-inline: 0.5em;
	line-height   : 1;
}


button,
.button,
input[type=submit] {
	width         : auto;
	cursor        : pointer;
	font-weight   : 400;
	text-align    : center;
	text-transform: uppercase;
}

.badge {
	font-weight: 500;
	width      : auto;

	&.snug {
		translate: -1em -.7em;
	}
}

:is(input, textarea, select):not(.button):hover,
:is(input, textarea, select):not(.button):focus {
	border-color: var(--color);
}

:is(input, textarea, select):not(.button, .icon):focus {
	box-shadow: inset 0 0 0 1px var(--color);
}

:is(input, textarea, select, a, button):focus-visible,
.button:has(:focus-visible) {
	outline       : 2px solid rgba(140, 140, 140, 0.25);
	outline-offset: 2px;

	&:hover {
		outline: none;
	}
}

:is([type=checkbox], [type=radio]):focus-visible:not(:hover) {
	outline-width: 4px;
}

button,
.button,
.alert,
.badge,
input,
textarea,
select,
article {
	border      : 1px solid;
	border-color: rgba(var(--text-color-rgb), .5);
}

button,
.button,
.alert,
.badge,
nav a,
input,
textarea,
select,
article {
	transition: color .2s ease-in-out, background .1s ease-in-out, border .15s ease-in-out, filter .1s ease-in-out;
}

a {
	cursor    : pointer;
	transition: color .1s ease-in-out;

	&:hover,
	&:focus {
		text-decoration: none;
	}
}

.alert {
	display        : flex;
	justify-content: flex-start;
	padding        : .5em 1em;

	svg {
		min-width: 1em;
	}
}

button,
.badge,
.button,
.alert,
input[type=submit] {
	background-color: var(--color);
	border-color    : var(--color);
}

:is(button, .badge, .button, .alert, i:empty, .icon, input[type=submit]) {
	color: var(--text-color);

	&:is(.outline, .hazy, .link) {
		--text-color    : var(--color);
		--text-color-rgb: var(--color-rgb);
		color           : var(--text-color);
	}

	&:is(.link, .hazy) {
		border-color: transparent;
	}

	&:is(.link, .outline) {
		background: none;
	}

	&.hazy {
		background-color: rgba(var(--color-rgb), .1);
	}

	svg {
		fill      : currentColor;
		transform : scale(1);
		transition: all .2s ease-in-out;
		display   : block;
	}
}

:is(button, .button, input[type=submit]):is(.link, .outline) {

	&.active:not(:active),
	&:has(:checked):not(:active),
	&:hover:not(:active),
	&:focus:not(:active),
	&:focus-within:not(:active) {
		@extend %ui-bg-hover;
	}
}

:is(button, .button, input[type=submit]).hazy {

	&.active:not(:active),
	&:has(:checked):not(:active),
	&:hover:not(:active),
	&:focus:not(:active),
	&:focus-within:not(:active) {
		@extend %ui-bg-hover;
	}
}

:is(button, .button, input[type=submit]):not(.link, .hazy) {

	&.active:not(:active),
	&:has(:checked):not(:active),
	&:hover:not(:active),
	&:focus:not(:active),
	&:focus-within:not(:active) {
		@extend %ui-hover;
	}
}

a:hover {
	@extend %ui-hover;
}

.link {
	text-transform: capitalize;
}

.toolbar {
	justify-content: space-between;
}

@keyframes spinner {
	0% {
		transform: rotate(0deg)
	}

	90%,
	100% {
		transform: rotate(360deg)
	}
}

[aria-busy] {
	position: relative;

	&::after {
		content       : '';
		box-sizing    : border-box;
		position      : absolute;
		inset         : 0;
		margin        : auto;
		width         : 1.3em;
		height        : 1.3em;
		border-radius : 50%;
		border        : .15em solid transparent;
		border-color  : var(--text-color) var(--text-color) transparent transparent;
		opacity       : 0;
		pointer-events: none;
		transition    : opacity .3s ease-in-out .1s;
	}
}

[aria-busy=true],
:is(button, .button, input[type=submit])[aria-busy=true] {
	pointer-events: none;
	user-select   : none;
	cursor        : default;
	color         : transparent;

	&::after {
		opacity  : 1;
		animation: spinner .8s ease infinite;
	}
}

.toobar,
article>header,
article>footer {
	min-height: 2.9em;
}

hr {
	height          : 1px;
	border          : 0;
	background-color: var(--default);
	margin          : var(--gap);
}

section {
	padding: (calc(var(--gap) * 2)) var(--gap);
}

.outline {
	border-color: rgba(var(--color-rgb), .4);
	border-width: 1px;
	border-style: solid;

	li {
		border-color: inherit;
		position    : relative;

		ul {
			border-width: 1px;
			border-color: inherit;
			border-style: solid;
			inset       : auto -1px;
		}
	}

	&.tabs nav {
		margin      : -1px;
		border-color: inherit;

		> :not(ul) {
			border-width: 0 0 1px 1px;
			border-color: inherit;
			border-style: solid;
		}
	}

	&.flex-row {
		&.tabs nav {
			border-width: 0 1px 0 1px;
			border-style: solid;
		}

		> :not(ul)+*,
		>ul>li+li {
			border-width: 0 0 0 1px;
			border-color: inherit;
			border-style: solid;
		}
	}

	&:not(.alert)> :not(ul)+*,
	ul>li+li {
		border-width: 1px 0 0 0;
		border-color: inherit;
		border-style: solid;
	}
}