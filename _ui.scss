/*!
* Spry UI
*/
@use "variables"as *;

%ui {
	align-items       : center;
	appearance        : none;
	background        : transparent;
	border            : 0;
	color             : inherit;
	display           : inline-flex;
	font-size         : 100%;
	height            : auto;
	margin            : 0;
	min-height        : 2.3em;
	min-width         : 2.3em;
	padding-block     : .3em;
	padding-inline    : 1em;
	position          : relative;
	text-decoration   : none;
	transition        : all .1s ease-in-out;
	outline           : 0 solid rgba(var(--color-rgb), 0.25);
	outline-offset    : 2px;
	vertical-align    : middle;
	width             : 100%;
}

@mixin ui-closed {
	max-height      : 0;
	min-height      : 0;
	opacity         : 0;
	pointer-events  : none;
	pointer-events  : none;
	transform       : scaleY(.8) translateY(-4px) translateZ(0);
	transform-origin: top;
	transition      : transform .1s ease-in-out, opacity .1s ease-in-out, max-height .5s cubic-bezier(0, 1, 0, 1), min-height .5s cubic-bezier(0, 1, 0, 1), padding-block .5s cubic-bezier(0, 1, 0, 1); // Out
	transition-delay: .1s;
	z-index         : 2;

	&.from-left {
		max-height: none;
		transform : scaleX(.8) translateX(-40px) translateZ(0);
	}

	&.from-right {
		max-height: none;
		transform : scaleX(.8) translateX(40px) translateZ(0);
	}

	&.from-bottom {
		max-height      : none;
		transform       : scaleY(.8) translateY(20px) translateZ(0);
		transform-origin: bottom;
	}
}

%ui-closed {
	@include ui-closed;
}

@mixin ui-open {
	max-height    : 100vh;
	opacity       : 1;
	pointer-events: all;
	transform     : translateZ(0) scale(1, 1);
	z-index       : 2;

	&:is(.from-left, .from-right, .from-bottom) {
		transform: none;
	}
}

%ui-compact {
	min-height    : 1.7em;
	min-width     : 1.7em;
	padding-block : 0em;
	padding-inline: 0.5em;
	line-height   : 1;
}

%ui-spacious {
	min-height: 2.9em;
}

%ui-open {
	@include ui-open;
}

%ui-border {
	border-color: var(--color);
	border-width: 1px;
	border-style: solid;
}

%ui-border-radius {
	border-radius: .25em;
}

%ui-bg {
	background-color: var(--color);
	border-color    : var(--color);
}

%ui-hover {
	&:not(:active) {
		filter: brightness(1.15);
	}
}

%ui-bg-hover {
	&:not(:active) {
		background-color: rgba(var(--color-rgb), 0.1);
	}
}

%ui-color {
	color: var(--text-color);

	&:where(.link, .outline, .hazy, .plain) {
		color: var(--text);
	}
}

%ui-loading {
	&[aria-busy=true] {
		pointer-events: none;
		user-select   : none;
		cursor        : default;
		color         : transparent;

		&::after {
			opacity  : 1;
			animation: spinner .8s ease infinite;
		}
	}
}

%ui-margin-above {
	margin-top: .5em;
}

%ui-margin-above-lg {
	margin-top: 1em;
}

.ui {
	@extend %ui;
	@extend %ui-bg;
	@extend %ui-color;
	@extend %ui-border;
	@extend %ui-border-radius;
}

:focus-visible {
	outline-width: 2px;
}

.compact {
	@extend %ui-compact;
}

.spacious {
	@extend %ui-spacious;
}

a {
	cursor    : pointer;
	transition: color .1s ease-in-out;

	&:is(:hover, :focus) {
		@extend %ui-hover;
		text-decoration: none;
	}
}

.link,
.plain,
.hazy {
	border-color: transparent;
}

.link,
.plain,
.outline {
	background: transparent;
}

.hazy {
	background-color: rgba(var(--color-rgb), .1);
}

hr {
	height       : 0;
	margin       : var(--gapy) var(--gapx);
	border       : 0;
	border-bottom: 1px solid var(--border-color);
}

.rotate-pressed,
.flip-pressed,
.shy {
	transition: all .2s var(--ease);
}

.rotate-pressed[aria-pressed=true],
[aria-pressed=true] .rotate-pressed {
	rotate: 180deg;
}

.flip-pressed[aria-pressed=true],
[aria-pressed=true] .flip-pressed {
	scale: -1;
}