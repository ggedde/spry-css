/*!
* Spry Forms
*/
@use "ui" as *;

:is(input,textarea,select){
	@extend %ui;
	@extend %ui-border;
	@extend %ui-border-radius;
	border-color: var(--input-border-color);
	font-family: inherit;
	font-weight: inherit;
	color: var(--ui-text-color);
	&:hover {
		outline-width: 0;
	}
	&:focus {
		box-shadow: inset 0 0 0 1px var(--color);
	}
	&:is(:hover,:focus) {
		border-color: var(--color);
	}
}

:is(h1, h2, h3, h4, h5, label, p) + :is(input, select, textarea),
label > :is(input, select, textarea):not([type=radio], [type=checkbox]):only-child{
    @extend %ui-margin-above;
}

[type=range] {
	height: 0;
    min-height: 2px;
    padding: 0;
	margin-block: 1em;
	accent-color: var(--color);

}

[type=color] {
	height: 0;
	padding-inline: .5em;
}

::placeholder {
	opacity: .7;
}

::-webkit-calendar-picker-indicator {
	margin-left: -1em;
	margin-right: -.5em;
}

:is([type=radio], [type=checkbox]) {
	min-height: 1em;
	min-width: 1em;
	width: 1em;
	padding: 0;
	margin : 0 .6em 0 0;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	&::after {
		content: "";
		position: absolute;
		display: block;
		inset: 12px;
		opacity: 0;
		transition: all .1s ease-in-out;
		background-color: var(--color);
		border-radius: 2px;
	}
	&:checked {
		border-color: var(--color);
		&::after {
			inset: 2px;
			opacity: 1;
		}
	}
	&.switch {
		width: 2.25em;
		height: 1.15em;
		border-radius: 1em;	
		justify-content: left;
		&:not(:checked)::after {
			background-color: var(--border-color);
			opacity: 0.5;
		}
		&::after{
			margin: .15em;
			position: absolute;
			inset: 0 calc(100% - 1.05em) 0 0;
		}
		&:checked::after{
			left: calc(100% - 1.05em);
			right: 0;
		}
	}
}

[type=radio],
[type=radio]:checked::after,
[type=checkbox].switch::after{
	border-radius: 50%;
}

:is([type=checkbox], [type=radio]):focus-visible:not(:hover) {
	outline-width: 4px;
}

:disabled {
	opacity       : .6;
	pointer-events: none;
}

form.disabled :is(input, select, textarea, label, button) {
	pointer-events: none;
	opacity       : 0.8;
}

select,
.is-select {
	background-image   : url("data:image/svg+xml;utf8,<svg fill='gray' xmlns='http://www.w3.org/2000/svg' viewBox='-20 -6 40 36'><path d='M7.41 8.58 12 13.17l4.59-4.59L18 10l-6 6-6-6 1.41-1.42z'/></svg>");
	background-repeat  : no-repeat;
	background-position: calc(100% - 0.8em);
	padding-right      : 1.7em;
	line-height        : 1.55;
}

input,
select,
.is-select {
	text-overflow: ellipsis;
}

textarea {
	min-height : 8em;
	max-height : 500px;
	padding    : .75rem;
	max-width  : 100%;
	min-width  : 100%;
	line-height: 1.2;
}

input::file-selector-button {
	appearance: none;
	border: 0;
	background-color: rgba(var(--border-color-rgb), .4);
	color: inherit;
	height: 2.3em;
	padding-inline: 1em;
	margin: -.4em 1em -.4em -.6em;
	border-right: 1px solid var(--input-border-color);
	font: inherit;
}

label {
	position: relative;
	display : block;

	.ui {
		border-color: var(--input-border-color);
		background-color: rgba(var(--border-color-rgb), .4);
		color: inherit;
	}

	.error {
		color: #f33;
	}
	
	&:focus-within .ui,
	&:focus-within input::file-selector-button {
		background-color: var(--color);
		border-color: var(--color);
		color: var(--text-color);
	}

	:is(sup,sub) {
		position        : absolute;
		transform       : translate(10px, -50%);
		top             : 1.3em;
		transition      : all .2s ease-in-out;
		transform-origin: left;
		opacity         : 0.7;
	}

	&:focus-within,
	&.has-blank {

		:is(sup, sub) {
			transform  : translate(3px, -50%) scale(0.85);
			top        : -12px;
			font-weight: 500;
		}

		sub {
			top: calc(100% + 11px);
		}
	}

	&:has(input:not(:placeholder-shown)),
	&:has(textarea:not(:placeholder-shown)),
	&:has(select option:not(:empty):checked) {

		:is(sup, sub) {
			transform  : translate(3px, -50%) scale(0.85);
			top        : -12px;
			font-weight: 500;
		}

		sub {
			top: calc(100% + 11px);
		}
	}

	&:focus-within :is(sup, sub) {
		color: var(--color);
	}

	&.has-sup {
		margin-top: 1rem;
	}

	&.has-sub {
		margin-bottom: 1rem;
	}

	&:has(sup) {
		margin-top: 1rem;
	}

	&:has(sub) {
		margin-bottom: 1rem;
	}
}

.show-invalid :not(:focus):user-invalid {
	border-color: #f33;
}

.show-invalid label:has(:not(:focus):user-invalid) {
	.ui {
		background-color: #f33;
		border-color: #f33;
		color: #eee;
	}
	.error {
		display: block;
	}
}